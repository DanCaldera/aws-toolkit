echo pasos para instalar Jenkins en Ubuntu 22.04

echo instalando java

sudo apt update

sudo apt install default-jre
java -version

sudo apt install default-jdk
javac -version

echo instalando Jenkins

wget -q -O - https://pkg.jenkins.io/debian-stable/jenkins.io.key |sudo gpg --dearmor -o /usr/share/keyrings/jenkins.gpg
sudo sh -c 'echo deb [signed-by=/usr/share/keyrings/jenkins.gpg] http://pkg.jenkins.io/debian-stable binary/ > /etc/apt/sources.list.d/jenkins.list'

sudo apt update

sudo apt install jenkins

echo Iniciando Jenkins

sudo systemctl start jenkins.service

sudo systemctl status jenkins

sudo cat /var/lib/jenkins/secrets/initialAdminPassword

echo Configurando Nginx

sudo apt update
sudo apt install nginx

echo Configurando LetsEncrypt

sudo snap install core; sudo snap refresh core
sudo apt remove certbot
sudo snap install --classic certbot
sudo ln -s /snap/bin/certbot /usr/bin/certbot

sudo nano /etc/nginx/sites-available/example.com

...
server_name example.com www.example.com;
...

sudo nginx -t

sudo systemctl reload nginx

sudo certbot --nginx -d example.com -d www.example.com

sudo systemctl status snap.certbot.renew.service

sudo certbot renew --dry-run


----------------------------------------------------------------------
Si se hace todo con certbot solamente verificar que los files /etc/nginx/sites-available/default esté bien configurado


PD: Solo para escuchar directamente del puerto 8080

server {
   listen         80 default_server;
   listen         [::]:80 default_server;
   server_name    localhost;
   root           /usr/share/nginx/html;
location / {
       proxy_pass http://127.0.0.1:8080;
       proxy_http_version 1.1;
       proxy_set_header Upgrade \$http_upgrade;
       proxy_set_header Connection 'upgrade';
       proxy_set_header Host \$host;
       proxy_cache_bypass \$http_upgrade;
   }
}

PD2: En caso de que el site enable default falle y se quiera configurar un nuevo site

echo "server {
listen 80;
listen [::]:80;
server_name $my_domain_name;
return 301 https://$server_name$request_uri;
}
server {
listen 443 ssl http2 default_server;
listen [::]:443 ssl http2 default_server;
server_name $my_domain_name;
location / {
proxy_pass http://localhost:$my_app_port;
}
ssl_certificate /etc/letsencrypt/live/$my_domain_name/fullchain.pem;
ssl_certificate_key /etc/letsencrypt/live/$my_domain_name/privkey.pem;
ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
ssl_prefer_server_ciphers on;
ssl_ciphers EECDH+CHACHA20:EECDH+AES128:RSA+AES128:EECDH+AES256:RSA+AES256:EECDH+3DES:RSA+3DES:!MD5;
ssl_session_cache shared:SSL:5m;
ssl_session_timeout 1h;
add_header Strict-Transport-Security “max-age=15768000” always;
}" | sudo tee --append /etc/nginx/conf.d/server.conf